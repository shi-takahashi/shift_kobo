import 'package:flutter/material.dart';
import 'calendar_screen.dart';
import 'staff_list_screen.dart';
import 'settings_screen.dart';
import '../widgets/auto_assignment_dialog.dart';
import '../widgets/banner_ad_widget.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  int _selectedIndex = 0;

  final List<Widget> _screens = [
    const CalendarScreen(),
    const StaffListScreen(),
    const SettingsScreen(),
  ];

  final List<String> _titles = [
    'シフト表',
    'スタッフ管理',
    '設定',
  ];


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(_titles[_selectedIndex], style: const TextStyle(fontSize: 18)),
        toolbarHeight: 48, // デフォルト56 → 48に縮小
        actions: [
          IconButton(
            icon: const Icon(Icons.help_outline, size: 22),
            onPressed: () {
              _showHelpDialog();
            },
          ),
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: _screens[_selectedIndex],
          ),
          // バナー広告
          const BannerAdWidget(),
        ],
      ),
      bottomNavigationBar: NavigationBar(
        height: 65, // デフォルト80 → 65に縮小
        onDestinationSelected: (int index) {
          setState(() {
            _selectedIndex = index;
          });
        },
        selectedIndex: _selectedIndex,
        destinations: const <Widget>[
          NavigationDestination(
            icon: Icon(Icons.calendar_month, size: 22),
            label: 'シフト',
          ),
          NavigationDestination(
            icon: Icon(Icons.people, size: 22),
            label: 'スタッフ',
          ),
          NavigationDestination(
            icon: Icon(Icons.settings, size: 22),
            label: '設定',
          ),
        ],
      ),
      floatingActionButton: _buildFloatingActionButton(),
    );
  }

  Widget? _buildFloatingActionButton() {
    return null;
  }

  void _showAutoGenerateDialog() {
    showDialog<bool>(
      context: context,
      builder: (context) => AutoAssignmentDialog(
        selectedMonth: DateTime.now(),
      ),
    ).then((result) {
      if (result == true) {
        setState(() {});
      }
    });
  }

  void _showHelpDialog() {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('使い方'),
        content: const SingleChildScrollView(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text('1. スタッフ管理でスタッフを登録'),
              SizedBox(height: 8),
              Text('2. カレンダーでシフトを自動作成'),
              SizedBox(height: 8),
              Text('3. 必要に応じて手動で調整'),
              SizedBox(height: 8),
              Text('4. 完成したシフト表を共有'),
            ],
          ),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('閉じる'),
          ),
        ],
      ),
    );
  }
}